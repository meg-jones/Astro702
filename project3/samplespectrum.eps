%!PS-Adobe-2.0 EPSF-2.0
%%Title: samplespectrum.eps
%%Creator: gnuplot 4.6 patchlevel 1
%%CreationDate: Wed Apr 27 14:10:24 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (samplespectrum.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 1)
  /Author (mljones1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 27 14:10:24 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
686 448 M
63 0 V
6198 0 R
-63 0 V
stroke
602 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (-10)]
] -46.7 MRshow
1.000 UL
LTb
686 850 M
63 0 V
6198 0 R
-63 0 V
stroke
602 850 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
686 1252 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1252 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
686 1654 M
63 0 V
6198 0 R
-63 0 V
stroke
602 1654 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
686 2056 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
686 2458 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2458 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
686 2861 M
63 0 V
6198 0 R
-63 0 V
stroke
602 2861 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
686 3263 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3263 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
686 3665 M
63 0 V
6198 0 R
-63 0 V
stroke
602 3665 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
686 4067 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4067 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
686 4469 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4469 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 90)]
] -46.7 MRshow
1.000 UL
LTb
686 4871 M
63 0 V
6198 0 R
-63 0 V
stroke
602 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
1.000 UL
LTb
686 448 M
0 63 V
0 4360 R
0 -63 V
stroke
686 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (-50)]
] -46.7 MCshow
1.000 UL
LTb
1730 448 M
0 63 V
0 4360 R
0 -63 V
stroke
1730 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2773 448 M
0 63 V
0 4360 R
0 -63 V
stroke
2773 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
3817 448 M
0 63 V
0 4360 R
0 -63 V
stroke
3817 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
4860 448 M
0 63 V
0 4360 R
0 -63 V
stroke
4860 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
5904 448 M
0 63 V
0 4360 R
0 -63 V
stroke
5904 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
6947 448 M
0 63 V
0 4360 R
0 -63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
LCb setrgbcolor
112 2659 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Temperature \(K\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3816 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Velocity \(km/s\))]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
6697 834 Pls
6680 853 Pls
6663 843 Pls
6646 834 Pls
6629 853 Pls
6612 862 Pls
6594 862 Pls
6577 853 Pls
6560 843 Pls
6543 843 Pls
6526 853 Pls
6508 862 Pls
6491 862 Pls
6474 872 Pls
6457 872 Pls
6440 853 Pls
6422 862 Pls
6405 881 Pls
6388 891 Pls
6371 900 Pls
6354 891 Pls
6336 891 Pls
6319 909 Pls
6302 928 Pls
6285 938 Pls
6267 947 Pls
6250 957 Pls
6233 995 Pls
6216 1042 Pls
6198 1089 Pls
6181 1155 Pls
6164 1221 Pls
6147 1297 Pls
6130 1401 Pls
6113 1543 Pls
6095 1694 Pls
6078 1855 Pls
6061 2044 Pls
6044 2233 Pls
6027 2403 Pls
6009 2526 Pls
5992 2621 Pls
5975 2649 Pls
5958 2677 Pls
5941 2715 Pls
5923 2744 Pls
5906 2829 Pls
5889 2847 Pls
5872 2810 Pls
5855 2715 Pls
5837 2573 Pls
5820 2441 Pls
5803 2346 Pls
5786 2242 Pls
5769 2129 Pls
5752 2044 Pls
5734 1949 Pls
5717 1883 Pls
5700 1827 Pls
5683 1760 Pls
5665 1713 Pls
5648 1656 Pls
5631 1609 Pls
5614 1571 Pls
5596 1552 Pls
5579 1552 Pls
5562 1524 Pls
5545 1524 Pls
5528 1524 Pls
5510 1524 Pls
5493 1505 Pls
5476 1496 Pls
5459 1505 Pls
5442 1515 Pls
5424 1543 Pls
5407 1590 Pls
5390 1628 Pls
5373 1704 Pls
5356 1779 Pls
5339 1845 Pls
5321 1912 Pls
5304 1987 Pls
5287 2063 Pls
5270 2138 Pls
5253 2195 Pls
5235 2205 Pls
5218 2195 Pls
5201 2176 Pls
5183 2138 Pls
5166 2082 Pls
5149 2034 Pls
5132 1959 Pls
5115 1893 Pls
5097 1817 Pls
5080 1751 Pls
5063 1704 Pls
5046 1637 Pls
5029 1609 Pls
5011 1581 Pls
4994 1543 Pls
4977 1496 Pls
4960 1477 Pls
4943 1467 Pls
4925 1448 Pls
4908 1429 Pls
4891 1429 Pls
4874 1458 Pls
4857 1524 Pls
4840 1637 Pls
4822 1760 Pls
4805 1902 Pls
4788 2082 Pls
4771 2280 Pls
4753 2488 Pls
4736 2706 Pls
4719 2914 Pls
4702 3037 Pls
4684 3055 Pls
4667 3055 Pls
4650 3027 Pls
4633 2999 Pls
4616 3046 Pls
4598 3188 Pls
4581 3367 Pls
4564 3557 Pls
4547 3717 Pls
4530 3765 Pls
4512 3774 Pls
4495 3755 Pls
4478 3736 Pls
4461 3698 Pls
4444 3670 Pls
4427 3698 Pls
4409 3746 Pls
4392 3821 Pls
4374 3944 Pls
4357 4076 Pls
4340 4218 Pls
4323 4341 Pls
4306 4436 Pls
4289 4511 Pls
4271 4511 Pls
4254 4483 Pls
4237 4483 Pls
4220 4511 Pls
4203 4511 Pls
4185 4445 Pls
4168 4388 Pls
4151 4388 Pls
4134 4417 Pls
4117 4464 Pls
4099 4549 Pls
4082 4663 Pls
4065 4682 Pls
4047 4663 Pls
4030 4682 Pls
4013 4606 Pls
3996 4540 Pls
3979 4436 Pls
3961 4284 Pls
3944 4124 Pls
3927 4020 Pls
3910 3963 Pls
3893 3982 Pls
3876 4095 Pls
3858 4266 Pls
3841 4379 Pls
3824 4388 Pls
3807 4228 Pls
3790 4010 Pls
3772 3850 Pls
3755 3783 Pls
3738 3774 Pls
3720 3698 Pls
3703 3642 Pls
3686 3689 Pls
3669 3906 Pls
3652 3982 Pls
3634 3991 Pls
3617 4001 Pls
3600 4048 Pls
3583 4086 Pls
3566 3935 Pls
3548 3793 Pls
3531 3727 Pls
3514 3689 Pls
3497 3632 Pls
3480 3679 Pls
3462 3812 Pls
3445 3991 Pls
3428 4199 Pls
3410 4407 Pls
3393 4464 Pls
3376 4284 Pls
3359 4095 Pls
3342 4086 Pls
3325 4266 Pls
3307 4379 Pls
3290 4379 Pls
3273 4322 Pls
3256 4275 Pls
3239 4303 Pls
3221 4275 Pls
3204 4332 Pls
3187 4417 Pls
3170 4455 Pls
3152 4445 Pls
3135 4483 Pls
3118 4474 Pls
3101 4426 Pls
3083 4351 Pls
3066 4237 Pls
3049 3972 Pls
3032 3717 Pls
3015 3462 Pls
2997 3226 Pls
2980 2999 Pls
2963 2810 Pls
2946 2772 Pls
2929 2829 Pls
2912 2942 Pls
2894 3169 Pls
2877 3424 Pls
2859 3661 Pls
2842 3831 Pls
2825 3897 Pls
2808 3897 Pls
2791 3821 Pls
2774 3727 Pls
2756 3613 Pls
2739 3509 Pls
2722 3462 Pls
2705 3396 Pls
2688 3339 Pls
2670 3245 Pls
2653 3122 Pls
2636 3018 Pls
2618 2857 Pls
2601 2734 Pls
2584 2696 Pls
2567 2725 Pls
2550 2781 Pls
2532 2800 Pls
2515 2725 Pls
2498 2602 Pls
2481 2441 Pls
2464 2252 Pls
2446 2082 Pls
2429 1912 Pls
2412 1751 Pls
2394 1600 Pls
2377 1477 Pls
2360 1363 Pls
2343 1269 Pls
2326 1184 Pls
2309 1117 Pls
2291 1089 Pls
2274 1032 Pls
2257 1013 Pls
2240 995 Pls
2223 976 Pls
2205 966 Pls
2188 947 Pls
2171 928 Pls
2153 919 Pls
2136 928 Pls
2119 919 Pls
2102 909 Pls
2085 891 Pls
2067 881 Pls
2050 881 Pls
2033 881 Pls
2016 872 Pls
1999 872 Pls
1981 881 Pls
1964 881 Pls
1947 881 Pls
1929 881 Pls
1912 872 Pls
1895 862 Pls
1878 862 Pls
1861 862 Pls
1843 843 Pls
1826 853 Pls
1809 862 Pls
1792 862 Pls
1775 872 Pls
1758 853 Pls
1740 862 Pls
1723 862 Pls
1705 862 Pls
1688 862 Pls
1671 862 Pls
1654 853 Pls
1637 853 Pls
1620 862 Pls
1602 853 Pls
1585 853 Pls
1568 853 Pls
1551 843 Pls
1534 843 Pls
1516 853 Pls
1499 853 Pls
1482 853 Pls
1464 843 Pls
1447 853 Pls
1430 853 Pls
1413 853 Pls
1396 853 Pls
1378 853 Pls
1361 853 Pls
1344 872 Pls
1327 853 Pls
1309 843 Pls
1292 843 Pls
1275 843 Pls
1258 843 Pls
1240 853 Pls
1223 853 Pls
1206 853 Pls
1189 853 Pls
1172 843 Pls
1155 853 Pls
1137 843 Pls
1120 843 Pls
1102 843 Pls
1085 843 Pls
1068 862 Pls
1051 843 Pls
1034 843 Pls
1017 853 Pls
999 853 Pls
982 853 Pls
965 853 Pls
948 853 Pls
930 853 Pls
913 853 Pls
896 843 Pls
879 843 Pls
861 862 Pls
% End plot #1
1.000 UL
LTb
686 4871 N
686 448 L
6261 0 V
0 4423 V
-6261 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
